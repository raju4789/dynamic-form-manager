name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK for backend
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build and run unit tests
      - name: Build and run unit tests
        run: |
          cd backend
          ./mvnw clean install -P unit-tests

      # Step 5: Run Cucumber integration tests
      - name: Run Cucumber integration tests
        run: |
          cd backend
          ./mvnw verify -P integration-tests

      # Step 6: Set up Node.js for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 7: Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 8: Build and test the frontend
      - name: Build and test frontend
        run: |
          cd ui
          npm install
          npm run build
          npm test

      # Step 9: Install Docker Compose and Build Docker images
      - name: Install Docker Compose and Build Docker images
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose -f backend/docker-compose.yml build

      # Step 10: Upload Cucumber Reports
      - name: Upload Cucumber Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cucumber-report
          path: backend/target/cucumber-report.json