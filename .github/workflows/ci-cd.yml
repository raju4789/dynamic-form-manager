name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      job_to_run:
        description: "Specify the job to run (e.g., build-and-test, frontend, docker-build, upload-reports, danger)"
        required: false
        default: "all"

jobs:
  build-and-test:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job_to_run == 'all' || github.event.inputs.job_to_run == 'build-and-test' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Run Unit Tests
        run: |
          cd backend
          ./mvnw clean install -P unit-tests

      - name: Run Cucumber Integration Tests
        run: |
          cd backend
          ./mvnw verify -P integration-tests

  frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job_to_run == 'all' || github.event.inputs.job_to_run == 'frontend' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and Build Frontend
        run: |
          cd ui
          npm ci
          npm run build

      - name: Run Frontend Tests
        run: |
          cd ui
          npm test

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [build-and-test, frontend]
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job_to_run == 'all' || github.event.inputs.job_to_run == 'docker-build' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Images
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose -f backend/docker-compose.yml build

  upload-reports:
    name: Upload Test Reports
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job_to_run == 'all' || github.event.inputs.job_to_run == 'upload-reports' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload Cucumber Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cucumber-report
          path: backend/target/cucumber-report.json

# Step 9: Run Danger.js
danger:
  name: Run Danger.js
  runs-on: ubuntu-latest
  needs: [build-and-test, frontend]
  if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job_to_run == 'all' || github.event.inputs.job_to_run == 'danger' }}

  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Dependencies for Danger.js
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Navigate to the ui folder to install dependencies if needed
        cd ui
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
        # Return to the root directory to run Danger.js
        cd ..
        npm install --save-dev danger
        npx danger ci