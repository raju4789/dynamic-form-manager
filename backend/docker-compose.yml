version: '3.8'

services:
  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "root$password" # Root password for MySQL
      MYSQL_DATABASE: finclutech_db # Default database
      MYSQL_USER: admin # MySQL user
      MYSQL_PASSWORD: "admin@2025" # MySQL user password
    ports:
      - "3306:3306" # Expose MySQL on port 3306
    volumes:
      - mysql_data:/var/lib/mysql # Persist MySQL data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 3

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_container
    restart: always
    environment:
      PMA_HOST: mysql # Service name of the MySQL container
      PMA_PORT: 3306
    ports:
      - "8082:80" # Access phpMyAdmin on http://localhost:8082
    depends_on:
      - mysql
    networks:
      - app_network

  # MongoDB Service
  mongodb:
    image: mongo:5.0
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017" # Expose MongoDB on port 27017
    volumes:
      - mongodb_data:/data/db # Persist MongoDB data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Mongo Express Service
  mongo-express:
    image: mongo-express
    container_name: mongo_express_container
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb # Service name of the MongoDB container
      ME_CONFIG_MONGODB_PORT: 27017
    ports:
      - "8081:8081" # Access Mongo Express on http://localhost:8081
    depends_on:
      - mongodb
    networks:
      - app_network

  # Spring Boot Service
  spring-boot-app:
    build:
      context: . # Use the current directory as the build context
      dockerfile: Dockerfile # Specify the Dockerfile to use
    container_name: spring_boot_container
    restart: always
    ports:
      - "8080:8080" # Expose Spring Boot on port 8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/finclutech_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin@2025
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/finclutech_db
    depends_on:
      - mysql
      - mongodb
    networks:
      - app_network

volumes:
  mysql_data: # Volume for MySQL data persistence
  mongodb_data: # Volume for MongoDB data persistence

networks:
  app_network: # Custom network for container communication